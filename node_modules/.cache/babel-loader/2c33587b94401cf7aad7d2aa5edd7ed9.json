{"ast":null,"code":"var _jsxFileName = \"/Users/etiennewarneck/development/ASSIGNEMENTS/16.ClickAppGame/my-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Cards/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Score from \"./components/Score/Score\";\nimport images from \"./images.json\";\nimport \"./app.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images,\n      clickedPuppyIds: [],\n      score: 0,\n      goal: 8,\n      status: \"\"\n    };\n\n    this.shuffleScoreCard = id => {\n      let clickedPuppyIds = this.state.clickedPuppyIds;\n\n      if (clickedPuppyIds.includes(id)) {\n        this.setState({\n          clickedPuppyIds: [],\n          score: 0,\n          status: \"Game Over! You lost. Click to play again!\"\n        });\n        return;\n      } else {\n        clickedPuppyIds.push(id);\n\n        if (clickedPuppyIds.length === 8) {\n          this.setState({\n            score: 8,\n            status: \"You Won! Great Job, Smartie! Click to play again!\",\n            clickedPuppyIds: []\n          });\n          console.log('You Win');\n          return;\n        }\n\n        this.setState({\n          images,\n          clickedPuppyIds,\n          score: clickedPuppyIds.length,\n          status: \" \"\n        });\n\n        for (let i = images.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1));\n          [images[i], images[j]] = [images[j], images[i]];\n        }\n      }\n    };\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"The Clicky Game\"), React.createElement(\"p\", {\n      className: \"rule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Try not to click the same image twice!\")), React.createElement(Score, {\n      total: this.state.score,\n      goal: 8,\n      status: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.images.map(puppy => React.createElement(Card, {\n      shuffleScoreCard: this.shuffleScoreCard,\n      id: puppy.id,\n      key: puppy.id,\n      image: puppy.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Designed and built by Heather Mathies. You can find the code\", React.createElement(\"a\", {\n      href: \"https://github.com/hmathies/Clicky-Game\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" here\"), \".\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/etiennewarneck/development/ASSIGNEMENTS/16.ClickAppGame/my-app/src/App.js"],"names":["React","Component","Card","Wrapper","Score","images","App","state","clickedPuppyIds","score","goal","status","shuffleScoreCard","id","includes","setState","push","length","console","log","i","j","Math","floor","random","render","map","puppy","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./components/Cards/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Score from \"./components/Score/Score\";\nimport images from \"./images.json\";\nimport  \"./app.css\";\n\n\nclass App extends Component {\n  // Setting this.state.images to the cards json array\n  state = {\n    images,\n    clickedPuppyIds: [],\n    score: 0,\n    goal: 8,\n    status: \"\"\n  };\n\n  //shuffle the pup cards in the browser when clicked\n  shuffleScoreCard = id => {\n    let clickedPuppyIds = this.state.clickedPuppyIds;\n\n    if(clickedPuppyIds.includes(id)){\n      this.setState({ clickedPuppyIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n      return;\n    }else{\n      clickedPuppyIds.push(id)\n\n      if(clickedPuppyIds.length === 8){\n        this.setState({score: 8, status: \"You Won! Great Job, Smartie! Click to play again!\", clickedPuppyIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ images, clickedPuppyIds, score: clickedPuppyIds.length, status: \" \" });\n\n      for (let i = images.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [images[i], images[j]] = [images[j], images[i]];\n      }\n    }\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1 className=\"title\">The Clicky Game</h1>\n          <p className=\"rule\">\n            Try not to click the same image twice!\n          </p>\n        </header>\n        <Score total={this.state.score}\n               goal={8}\n               status={this.state.status}\n               />\n        <Wrapper>\n          {this.state.images.map(puppy => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={puppy.id}\n              key={puppy.id}\n              image={puppy.image}\n            />\n          ))}\n        </Wrapper>\n        <footer>\n          <p>Designed and built by Heather Mathies. You can find the\n          code<a href=\"https://github.com/hmathies/Clicky-Game\" target=\"_blank\" rel=\"noopener noreferrer\"> here</a>.</p>\n        </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}