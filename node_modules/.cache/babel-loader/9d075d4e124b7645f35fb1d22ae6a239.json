{"ast":null,"code":"var _jsxFileName = \"/Users/etiennewarneck/development/ASSIGNEMENTS/16.ClickAppGame/my-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Cards/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Score from \"./components/Score/Score\";\nimport images from \"./images.json\";\nimport \"./app.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //the object that represents what can change\n      images,\n      // json file\n      clickedImgIds: [],\n      //empty array\n      score: 0,\n      //\n      goal: 12,\n      status: \"\" // how to change color ???\n\n    };\n\n    this.shuffleImg = id => {\n      let clickedImgIds = this.state.clickedImgIds;\n\n      if (clickedImgIds.includes(id)) {\n        this.setState({\n          clickedImgIds: [],\n          score: 0,\n          status: \"Game Over!\"\n        }); // this.state.style({backgroundColor: 'red'});\n\n        return;\n      } else {\n        clickedImgIds.push(id);\n\n        if (clickedImgIds.length === 3) {\n          this.setState({\n            score: 3,\n            status: \"You Won!\",\n            clickedImgIds: []\n          });\n          return;\n        }\n\n        this.setState({\n          images,\n          clickedImgIds,\n          score: clickedImgIds.length,\n          status: \" \"\n        });\n\n        for (let i = images.length - 1; i > 0; i--) {\n          let j = Math.floor(Math.random() * (i + 1));\n          [images[i], images[j]] = [images[j], images[i]];\n        }\n      }\n    };\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"app_header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"app_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Clicky Game\"), React.createElement(\"p\", {\n      className: \"app_rule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Click each image only once!\")), React.createElement(Score, {\n      total: this.state.score,\n      goal: 8,\n      status: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.images.map(puppy => React.createElement(Card, {\n      shuffleImg: this.shuffleImg,\n      id: puppy.id,\n      key: puppy.id,\n      image: puppy.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \".\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/etiennewarneck/development/ASSIGNEMENTS/16.ClickAppGame/my-app/src/App.js"],"names":["React","Component","Card","Wrapper","Score","images","App","state","clickedImgIds","score","goal","status","shuffleImg","id","includes","setState","push","length","i","j","Math","floor","random","render","map","puppy","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./components/Cards/Card\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Score from \"./components/Score/Score\";\nimport images from \"./images.json\";\nimport  \"./app.css\";\n\n\nclass App extends Component {\n  state = {   //the object that represents what can change\n    images, // json file\n    clickedImgIds: [],  //empty array\n    score: 0,  //\n    goal: 12,\n    status: \"\" // how to change color ???\n  };\n\n  //shuffle the cards in the browser when clicked\n  shuffleImg = id => {\n    let clickedImgIds = this.state.clickedImgIds;\n\n    if(clickedImgIds.includes(id)){\n      this.setState({ clickedImgIds: [], score: 0, status:\"Game Over!\" });\n      // this.state.style({backgroundColor: 'red'});\n      return;\n    }else{\n      clickedImgIds.push(id)\n\n      if(clickedImgIds.length === 3){\n        this.setState({score: 3, status: \"You Won!\", clickedImgIds: []});\n        return;\n      }\n\n      this.setState({ images, clickedImgIds, score: clickedImgIds.length, status: \" \" });\n\n      for (let i = images.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [images[i], images[j]] = [images[j], images[i]];\n      }\n    }\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"app_header\">\n          <h1 className=\"app_title\">Clicky Game</h1>\n          <p className=\"app_rule\">\n            Click each image only once!\n          </p>\n        </header >\n        <Score total={this.state.score}\n               goal={8}\n               status={this.state.status}\n               />\n        <Wrapper>\n          {this.state.images.map(puppy => (\n            <Card\n              shuffleImg={this.shuffleImg}\n              id={puppy.id}\n              key={puppy.id}\n              image={puppy.image}\n            />\n          ))}\n        </Wrapper>\n        <footer>\n          <p>.</p>\n        </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}